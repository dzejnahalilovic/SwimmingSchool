<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="err.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>